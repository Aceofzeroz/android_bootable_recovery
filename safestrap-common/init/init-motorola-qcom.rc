on early-init
    start ueventd

on init
    loglevel 8
    export PATH /sbin
    export LD_LIBRARY_PATH .:/sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /external_sd

    symlink /system/etc /etc

    mkdir /boot
    mkdir /sdcard
    mkdir /sd-ext
    mkdir /external_sd
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /systemorig
    mkdir /userdataorig
    mkdir /cacheorig
    mount /tmp /tmp tmpfs
    chmod /tmp 0777

    exec /sbin/fixboot.sh
    export SAFESTRAP_BOOT true

on boot

    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

service adbd /sbin/adbd recovery
    disabled

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/bDeviceClass 0
    write /sys/class/android_usb/android0/bDeviceSubClass 0
    write /sys/class/android_usb/android0/bDeviceProtocol 0
    write /sys/class/android_usb/android0/idProduct 0x2e22
    write /sys/class/android_usb/android0/idVendor 0x22b8
    write /sys/module/g_android/parameters/cdrom 0
    write /sys/class/android_usb/android0/functions mass_storage,adb
    write /sys/class/android_usb/android0/ctrl_adb_pid 0x2e21
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config
    setprop service.adb.root 1

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
